#!/bin/bash

set -e

log "Checking docker-apt-install ..."
for i in apt-transport-https ca-certificates curl gettext pwgen wget vim ; do
	log "	$i"
	dpkg-query -W --showformat='${Status}\n' $i | grep "install ok installed" > /dev/null
done

log "Checking docker-apt-clean ..."
for i in /tmp /usr/share/{info,lintian,man} /var/lib/apt/lists /var/tmp ; do
	log "	$i"
	[[ ! "$(ls --almost-all $i)" ]]
done

log "Checking entrypoint::generate_password ..."
log "	environment"
export TEST1_PASSWORD=test1
generate_password test1
[[ -s $EP_SECRETS_ROOT/test1_password ]] && grep --quiet test1 $EP_SECRETS_ROOT/test1_password

log "	generated"
generate_password test2
[[ -s $EP_SECRETS_ROOT/test2_password ]] && [[ ${#TEST2_PASSWORD} -eq $EP_PWGEN_LENGTH ]]

log "	secrets"
echo test3 > $EP_SECRETS_ROOT/test3_password
generate_password test3
[[ -s $EP_SECRETS_ROOT/test3_password ]] && grep --quiet test3 $EP_SECRETS_ROOT/test3_password

log "Checking entrypoint::render_template ..."
template=$(mktemp)
instantiation=$(mktemp --dry-run)

cat <<- EOF > $template.template
test1 value here >>> \${TEST1_PASSWORD} <<< test1 value here
test2 value here >>> \${TEST2_PASSWORD} <<< test2 value here
test3 value here >>> \${TEST3_PASSWORD} <<< test3 value here
EOF

render_template $template $instantiation
[[ -f $instantiation ]] && \
	grep $TEST1_PASSWORD $instantiation && \
	grep $TEST2_PASSWORD $instantiation && \
	grep $TEST3_PASSWORD $instantiation

log "--- Test Passed ---"
exit 0
